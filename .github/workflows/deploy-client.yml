name: Deploy React Client to Azure App Service

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

  push:
    branches:
      - main
    paths:
      - "src/apps/react/**"

env:
  NODE_VERSION: '20.x'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: src/apps/react/package-lock.json

    - name: Install dependencies
      working-directory: ./src/apps/react
      run: npm ci

    - name: Lint code
      working-directory: ./src/apps/react
      run: npm run lint
      continue-on-error: true

    - name: Run tests
      working-directory: ./src/apps/react
      run: |
        if npm run | grep -q "test"; then
          npm run test -- --coverage --watchAll=false
        else
          echo "No test script found, skipping tests"
        fi
      continue-on-error: true

    - name: Build for staging
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
      working-directory: ./src/apps/react
      run: npm run build
      env:
        CI: true
        NODE_ENV: production
        VITE_API_BASE_URL: ${{ vars.API_BASE_URL_STAGING }}
        VITE_APP_ENVIRONMENT: staging

    - name: Build for production
      if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
      working-directory: ./src/apps/react
      run: npm run build
      env:
        CI: true
        NODE_ENV: production
        VITE_API_BASE_URL: ${{ vars.API_BASE_URL_PRODUCTION }}
        VITE_APP_ENVIRONMENT: production

    - name: Create web.config for SPA routing
      run: |
        cat > ./src/apps/react/dist/web.config << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <system.webServer>
            <rewrite>
              <rules>
                <rule name="Handle History Mode and hash mode for React Router" stopProcessing="true">
                  <match url="(.*)" />
                  <conditions logicalGrouping="MatchAll">
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                    <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                  </conditions>
                  <action type="Rewrite" url="/" />
                </rule>
              </rules>
            </rewrite>
            <staticContent>
              <mimeMap fileExtension=".json" mimeType="application/json" />
              <mimeMap fileExtension=".woff" mimeType="application/font-woff" />
              <mimeMap fileExtension=".woff2" mimeType="application/font-woff" />
              <mimeMap fileExtension=".js" mimeType="application/javascript" />
              <mimeMap fileExtension=".css" mimeType="text/css" />
            </staticContent>
            <httpErrors>
              <remove statusCode="404" subStatusCode="-1" />
              <error statusCode="404" path="/" responseMode="ExecuteURL" />
            </httpErrors>
            <httpCompression>
              <dynamicTypes>
                <clear />
                <add enabled="true" mimeType="text/*"/>
                <add enabled="true" mimeType="message/*"/>
                <add enabled="true" mimeType="application/javascript"/>
                <add enabled="true" mimeType="application/json"/>
                <add enabled="false" mimeType="*/*"/>
              </dynamicTypes>
              <staticTypes>
                <clear />
                <add enabled="true" mimeType="text/*"/>
                <add enabled="true" mimeType="message/*"/>
                <add enabled="true" mimeType="application/javascript"/>
                <add enabled="true" mimeType="application/json"/>
                <add enabled="false" mimeType="*/*"/>
              </staticTypes>
            </httpCompression>
          </system.webServer>
        </configuration>
        EOF

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: react-app
        path: ./src/apps/react/dist

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    environment: 
      name: 'staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: react-app
        path: ./dist

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ vars.AZURE_CLIENT_APP_NAME_STAGING }}
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_CLIENT_PUBLISH_PROFILE_STAGING }}
        package: ./dist

    - name: Configure App Settings
      uses: azure/appservice-settings@v1
      with:
        app-name: ${{ vars.AZURE_CLIENT_APP_NAME_STAGING }}
        app-settings-json: |
          [
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "20.11.1"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "false"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ]

  deploy-production:
    runs-on: ubuntu-latest
    needs: [build, deploy-staging]
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment: 
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: react-app
        path: ./dist

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ vars.AZURE_CLIENT_APP_NAME_PRODUCTION }}
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_CLIENT_PUBLISH_PROFILE_PRODUCTION }}
        package: ./dist

    - name: Configure App Settings
      uses: azure/appservice-settings@v1
      with:
        app-name: ${{ vars.AZURE_CLIENT_APP_NAME_PRODUCTION }}
        app-settings-json: |
          [
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "20.11.1"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "false"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ]
