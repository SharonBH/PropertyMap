name: Deploy React Client to Azure Static Web Apps

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

  push:
    branches:
      - main
    paths:
      - "src/apps/react/**"

  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
    paths:
      - "src/apps/react/**"

env:
  NODE_VERSION: '20'

jobs:
  build_and_deploy_staging:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy to Staging
    environment: 
      name: 'staging'
      url: ${{ steps.builddeploy.outputs.static_web_app_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
        lfs: false

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: src/apps/react/package-lock.json

    - name: Install dependencies
      working-directory: ./src/apps/react
      run: npm ci

    - name: Lint code
      working-directory: ./src/apps/react
      run: npm run lint
      continue-on-error: true

    - name: Run tests
      working-directory: ./src/apps/react
      run: |
        if npm run | grep -q "test"; then
          npm run test -- --coverage --watchAll=false
        else
          echo "No test script found, skipping tests"
        fi
      continue-on-error: true

    - name: Build and Deploy to Azure Static Web Apps
      id: builddeploy
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_STAGING }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "src/apps/react"
        output_location: "dist"
        api_location: ""
        skip_app_build: false
        app_build_command: 'npm run build'
      env:
        # Environment variables for Vite build
        VITE_API_BASE_URL: ${{ vars.API_BASE_URL_STAGING }}
        VITE_APP_ENVIRONMENT: staging
        NODE_ENV: production

  build_and_deploy_production:
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    runs-on: ubuntu-latest
    name: Build and Deploy to Production
    environment: 
      name: 'production'
      url: ${{ steps.builddeploy.outputs.static_web_app_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
        lfs: false

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: src/apps/react/package-lock.json

    - name: Install dependencies
      working-directory: ./src/apps/react
      run: npm ci

    - name: Lint code
      working-directory: ./src/apps/react
      run: npm run lint
      continue-on-error: true

    - name: Run tests
      working-directory: ./src/apps/react
      run: |
        if npm run | grep -q "test"; then
          npm run test -- --coverage --watchAll=false
        else
          echo "No test script found, skipping tests"
        fi
      continue-on-error: true

    - name: Build and Deploy to Azure Static Web Apps
      id: builddeploy
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PRODUCTION }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "src/apps/react"
        output_location: "dist"
        api_location: ""
        skip_app_build: false
        app_build_command: 'npm run build'
      env:
        # Environment variables for Vite build
        VITE_API_BASE_URL: ${{ vars.API_BASE_URL_PRODUCTION }}
        VITE_APP_ENVIRONMENT: production
        NODE_ENV: production

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
    - name: Close Pull Request
      id: closepullrequest
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_STAGING }}
        action: "close"
