{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "prod",
      "allowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, staging, prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "F1",
        "B1",
        "B2",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "App Service Plan SKU"
      }
    },
    "sqlAdminUsername": {
      "type": "string",
      "defaultValue": "sqladmin",
      "metadata": {
        "description": "SQL Server admin username"
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "SQL Server admin password"
      }
    },
    "enableApplicationInsights": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable Application Insights"
      }
    }
  },
  "variables": {
    "appServicePlanName": "[format('asp-propertymap-{0}', parameters('environmentName'))]",
    "apiAppName": "[format('app-propertymap-api-{0}', parameters('environmentName'))]",
    "clientAppName": "[format('app-propertymap-client-{0}', parameters('environmentName'))]",
    "sqlServerName": "[format('sql-propertymap-{0}', parameters('environmentName'))]",
    "sqlDatabaseName": "PropertyMapDB",
    "applicationInsightsName": "[format('appi-propertymap-{0}', parameters('environmentName'))]",
    "storageAccountName": "[format('stpropertymap{0}', parameters('environmentName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appServicePlanSku')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "PropertyMap"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('apiAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "DOTNETCORE|9.0",
          "alwaysOn": true,
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "appSettings": [
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "[if(equals(parameters('environmentName'), 'prod'), 'Production', 'Development')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[if(parameters('enableApplicationInsights'), reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).InstrumentationKey, '')]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[if(parameters('enableApplicationInsights'), reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).ConnectionString, '')]"
            }
          ]
        },
        "httpsOnly": true
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "PropertyMap",
        "Type": "API"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('clientAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "NODE|20-lts",
          "alwaysOn": true,
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "appSettings": [
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "20.11.1"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "false"
            },
            {
              "name": "VITE_API_BASE_URL",
              "value": "[concat('https://', variables('apiAppName'), '.azurewebsites.net')]"
            }
          ]
        },
        "httpsOnly": true
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "PropertyMap",
        "Type": "Client"
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-02-01-preview",
      "name": "[variables('sqlServerName')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "version": "12.0",
        "minimalTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled"
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "PropertyMap"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-02-01-preview",
      "name": "[format('{0}/{1}', variables('sqlServerName'), variables('sqlDatabaseName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ],
      "sku": {
        "name": "S0",
        "tier": "Standard"
      },
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 268435456000
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "PropertyMap"
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2021-02-01-preview",
      "name": "[format('{0}/{1}', variables('sqlServerName'), 'AllowAzureServices')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      }
    },
    {
      "condition": "[parameters('enableApplicationInsights')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 90,
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "PropertyMap"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "PropertyMap"
      }
    }
  ],
  "outputs": {
    "apiAppServiceName": {
      "type": "string",
      "value": "[variables('apiAppName')]"
    },
    "clientAppServiceName": {
      "type": "string",
      "value": "[variables('clientAppName')]"
    },
    "sqlServerFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName'))).fullyQualifiedDomainName]"
    },
    "sqlDatabaseName": {
      "type": "string",
      "value": "[variables('sqlDatabaseName')]"
    },
    "applicationInsightsInstrumentationKey": {
      "condition": "[parameters('enableApplicationInsights')]",
      "type": "string",
      "value": "[if(parameters('enableApplicationInsights'), reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).InstrumentationKey, '')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "apiUrl": {
      "type": "string",
      "value": "[concat('https://', variables('apiAppName'), '.azurewebsites.net')]"
    },
    "clientUrl": {
      "type": "string",
      "value": "[concat('https://', variables('clientAppName'), '.azurewebsites.net')]"
    }
  }
}
